/**
 * Tile class
 * @param {int} x     X coordinate of tile
 * @param {int} y     Y coordinate of tile
 * @param {char, bool} value Value of the tile. Either a letter [char] or false if the tile is empty
 */function Tile(e,t,n){var r=["b","c","d","f","g","h","j","k","l","m","n","p","q","r","s","t","v","w","x","z"],i=["a","e","i","o","u","y"];this.x=e;this.y=t;this.value=n?n:!1;this.elem={tile:$("<div>").addClass("tile"),face:$("<div>").addClass("face"),base:$("<div>").addClass("base"),text:$("<span>")};if(n){$(this.elem.text).html(n);if(r.indexOf(n)>=0){console.log("con");$(this.elem.tile).addClass("consonant")}else if(i.indexOf(n)>=0){console.log("vow");$(this.elem.tile).addClass("vowel")}}$(this.elem.face).append(this.elem.text);$(this.elem.tile).append(this.elem.face,this.elem.base)}function Grid(e,t){this.elem=$("<div>").addClass("grid");this.grid=[];for(var n=0;n<t;n++){this.grid[n]=[];var r=$("<div>").addClass("row");for(var i=0;i<e;i++){var s=new Tile(i,n,"b");this.grid[n][i]=s;$(r).append(s.elem.tile)}$(this.elem).append(r)}console.log(this.grid)}function Menu(){this.rows=6;this.cols=6;this.minFill=.4;this.maxFill=.6;this.ele=$(".menuOuterContainer");this.doneCallback;this.controls={sizeUp:$(".menuContent>.sizeSelector>.up"),sizeDown:$(".menuContent>.sizeSelector>.down"),solo:$(".menuContent>.menuNavigation>.solo"),versus:$(".menuContent>.menuNavigation>.versus")};this.output={gridSize:$(".menuContent>.sizeSelector>.gridSize")};var e=this;$(this.controls.sizeUp).on("click",function(){if(e.rows<12&&e.cols<12){e.rows++;e.cols++}e.renderOutput()});$(this.controls.sizeDown).on("click",function(){if(e.rows>4&&e.cols>4){e.rows--;e.cols--}e.renderOutput()});$(this.controls.solo).on("click",function(){window.game.rows=e.rows;window.game.cols=e.cols;window.game.mode="solo";e.animateOut();typeof e.doneCallback=="function"&&e.doneCallback(e)});$(this.controls.versus).on("click",function(){alert("Sorry, Versus mode isn't done yet. Come back soon!")});this.renderOutput();this.animateIn()}Grid.prototype.getTile=function(e,t){return this.grid[e][t]};Grid.prototype.shiftRow=function(e,t){};Grid.prototype.shiftCol=function(e,t){};Grid.prototype.findWords=function(){};Menu.prototype.renderOutput=function(){$(this.output.gridSize).html(this.rows+"x"+this.cols)};Menu.prototype.animateIn=function(){$(this.ele).animate({left:"0px"},600)};Menu.prototype.animateOut=function(){$(this.ele).animate({left:"2000px"},300,function(){$(this).hide()})};Menu.prototype.done=function(e){this.doneCallback=e};